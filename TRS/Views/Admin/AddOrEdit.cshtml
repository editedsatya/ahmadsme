@model TRS.Models.RegisterViewModel


@{
    ViewBag.Title = "User Management";
    if (Model.Id == null)
    { ViewBag.SubTitle = "New User"; }
    else
    { ViewBag.SubTitle = "Modify User"; }

}

 



@using (Html.BeginForm("AddOrEdit", "Admin"))
{
    @Html.HiddenFor(m => m.Id)

    @Html.AntiForgeryToken()


    


    <div class="box box-default">
        <div class="box-header with-border">
            <h3 class="box-title">@ViewBag.SubTitle</h3>
        </div>

        <div class="box-body">
            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(m => m.Customers, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.CustomerId, new SelectList(Model.Customers, "Id", "Name"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                    </div>
                </div>


                @*<div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.NameIdentifier, new { @class = "form-control" })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.NameIdentifier, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NameIdentifier, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NameIdentifier, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.Label("Roles", new { @class = "control-label col-md-2" })
                    <span class="col-md-10">
                        @foreach (var item in ViewBag.Roles)
                        {
                            <input type="checkbox" name="SelectedRole" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                            @Html.Label(((SelectListItem)item).Text, new { @class = "control-label" })
                            <br />
                        }
                    </span>
                </div>


            </div>
        </div>
        <div class="box-footer">

            <input type="submit" value="Save" class="btn btn-primary" />


            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })


        </div>
    </div>




}


